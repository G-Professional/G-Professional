name: Update Lines Across All Repos

permissions:
  contents: write   # needed to push README changes

on:
  schedule:
    - cron: "0 0 * * 0"   # weekly
  workflow_dispatch:

env:
  # You can tweak this to be more specific (add more emails/names separated by |).
  USERNAME: ${{ github.repository_owner }}
  AUTHOR_REGEX: '(^|.* )${{ github.repository_owner }}($| .*|@)|${{ github.repository_owner }}@users\.noreply\.github\.com|[0-9]+\+${{ github.repository_owner }}@users\.noreply\.github\.com'
  # Set to "public" or "all". "all" needs a PAT with repo read access; see step notes below.
  VISIBILITY: public

jobs:
  total:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure README markers exist
        shell: bash
        run: |
          if [ ! -f README.md ]; then
            echo "# Hi, I'm $USERNAME ðŸ‘‹" > README.md
            echo "" >> README.md
          fi
          for marker in ALL-REPOS-START ALL-REPOS-END; do
            grep -q "<!-- $marker -->" README.md || echo "<!-- $marker -->" >> README.md
          done
          if ! grep -q "<!-- ALL-REPOS-START -->" README.md; then
            printf "\n### ðŸ“Š Lines of code across all repos\n<!-- ALL-REPOS-START -->\n_updating..._\n<!-- ALL-REPOS-END -->\n" >> README.md
          fi

      - name: Configure auth for cloning
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.REPOS_TOKEN || github.token }}
        run: |
          echo "machine github.com login $USERNAME password $GH_TOKEN" > ~/.netrc
          chmod 600 ~/.netrc
          git config --global protocol.version 2
          git config --global --add safe.directory '*'
          gh auth status || true

      - name: Get repo list
        id: list
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.REPOS_TOKEN || github.token }}
        run: |
          set -e
          if [ "$VISIBILITY" = "all" ]; then
            scope="--visibility all"
          else
            scope="--visibility public"
          fi
          gh repo list "$USERNAME" $scope --no-archived --json nameWithOwner,isFork \
            | jq -r '.[] | select(.isFork|not) | .nameWithOwner' > repos.txt
          echo "Found repos:"
          cat repos.txt

      - name: Count lines per repo
        shell: bash
        env:
          AUTHOR_REGEX: ${{ env.AUTHOR_REGEX }}
        run: |
          echo "repo,added,deleted,net" > summary.csv
          total_add=0; total_del=0;
          while IFS= read -r repo; do
            echo "::group::Processing $repo"
            git clone --filter=blob:none "https://github.com/$repo.git" 2>/dev/null || { echo "clone failed: $repo"; echo "::endgroup::"; continue; }
            cd "$(basename "$repo")"
            # fetch all history (shallow clone was just to speed up)
            git fetch --quiet --unshallow 2>/dev/null || git fetch --quiet --all --tags
            # sum adds/deletes for matching author across all refs
            stats=$(git log --all --pretty=tformat: --numstat --author="$AUTHOR_REGEX" 2>/dev/null \
              | awk 'NF==3 {a+=$1; d+=$2} END {printf "%d %d", a+0, d+0}')
            cd ..
            adds=$(echo "$stats" | awk '{print $1}')
            dels=$(echo "$stats" | awk '{print $2}')
            net=$((adds - dels))
            echo "$repo,$adds,$dels,$net" >> summary.csv
            total_add=$((total_add + adds))
            total_del=$((total_del + dels))
            echo "adds=$adds dels=$dels net=$net"
            echo "::endgroup::"
          done < repos.txt
          total_net=$((total_add - total_del))
          printf "TOTAL,%d,%d,%d\n" "$total_add" "$total_del" "$total_net" >> summary.csv

      - name: Build README block
        shell: bash
        run: |
          {
            echo '```text'
            tail -n +2 summary.csv | sort -t, -k4,4nr | awk -F, '
              BEGIN{ printf("%-40s %12s %12s %12s\n","repo","added","deleted","net")
                     printf("%-40s %12s %12s %12s\n","----------------------------------------","------------","------------","------------") }
              { if ($1=="TOTAL") next; printf("%-40s %12d %12d %12d\n",$1,$2,$3,$4) }
            '
            # totals line
            t=$(grep '^TOTAL,' summary.csv | tail -1)
            IFS=',' read -r _ ta td tn <<<"$t"
            echo
            printf "%-40s %12d %12d %12d\n" "GRAND TOTAL" "$ta" "$td" "$tn"
            echo '```'
          } > block.txt
          cat block.txt

      - name: Update README block
        shell: bash
        run: |
          awk -v repl="$(sed 's/[&/\]/\\&/g' block.txt | tr '\n' '\r' )" '
            BEGIN{ start="<!-- ALL-REPOS-START -->"; end="<!-- ALL-REPOS-END -->" }
            $0 ~ start { print; print gensub(/\r/,"\n","g",repl); skip=1; next }
            $0 ~ end   { print; skip=0; next }
            !skip      { print }
          ' README.md > README.md.new
          mv README.md.new README.md

      - name: Commit changes
        shell: bash
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add README.md summary.csv block.txt
          git commit -m "Update all-repos line stats" || echo "No changes"
          git push
